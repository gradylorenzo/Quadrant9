8.6.2018

+1 Added SystemInitializer. For now, all this does is query NavigationManager for the names of adjacent systems and name the stargates accordingly.

TODO:
>Change NavigationManager._starSystems into a Dictionary that uses Vector2 keys.
>Add CurrentPosition, CurrentRotation data to save file and NavigationManager for storing the player's position within a system

##############################################################################################################

8.3.2018

+1 Warp is now available, although it's kind of bad. But still available.
+2 NavigationManager, which now holds data regarding navigation within the galaxy.
+3 GameInitializer now initializes NavigationManager with system information.
	This data is pseudo-random and is indentical every time as long as the texture
	map being sampled does not change.
+4 SaveManager.WriteNewProfile and SaveManager.ReadProfile now handles active system handling.

##############################################################################################################

7.31.2018
Is it August yet?

+1 Ships now bank when turning. Huzzah!
>2 Player ship now does LeftControl and LeftAlt checks when the OnObjectSelected event is called. This will prevent the need
	to make every object check these on their own. Unlock and lock can therefore now easily be done from the overview.

##############################################################################################################

7.30.2018

>1 Consolidated Align and Approach methods into Align. Method checks to make sure the target is at least
	150km away before setting the warp flag. This is a redundant check.
>2 Renamed "ShipManager" to "ShipController".
	
+1 Targeting can now be done from the Overview.
+2 Target, Align, and Warp buttons are functional on the overview, although the underlying code
	for warping needs to be written. Unlock functionality is still only possible by alt-clicking directly on the object.
	These if statements will be moved to the OnObjectSelected methods,
+3 TestLoot object added, far enough away to be warped to, also contains items in the cargo for testing
	looting interface later.


##############################################################################################################

7.28.2018

+1 Recoded Overview, now uses EventManager.addOverviewData/removeOverviewData. Want to add background color animation.
+2 Added distances to Overview.

-1 Removed SelectedItem panel pending rebuild.

!1 Since the Overview has been rebuilt, issues have become apparent with icon sizes, so icons need to be resized.

Notes: Don't know if it's terribly important, but at this point I switched from VS Community to VS Code, and
I'm now editing all text files in VS Code including test profiles and Changelog.txt.

##############################################################################################################

7.26.2018

+1 Align and Approach methods have been separated. Align should not be used if the target is <150km,
	and Approach should not be used if target >150km.
+2 AllStop and associated notification are triggered when the player presses LeftCtrl + Space.
+3 Name and Distance readouts for LockedTargetBox
+4 DebugView. This can be toggled with the BackQuote/Tilde key to display origin grid,
	ScaleSpace.apparentPosition, and system information, and (if any is loaded) SaveManager.currentPlayer
	information.
+5 Speed meter and readout now work.

##############################################################################################################

7.25.2018

+1 Save Manager now has complete I/O methods:
	string[] ReadProfiles(): This returns a list of XML files found in /Profiles/ who contain "PROFILE/NAME" nodes
	with non-empty inner text.
	
	bool ReadProfile(string name): This returns true if a profile with a given name is successfuly loaded, which gives
	the go ahead to begin loading into the game proper.
	
	void WriteNewProfile(string name): Writes a new XML file with a default player profile using the provided name.
	
	void OverwriteProfile(): NotYetImplemented.

+2 Functional, although not perfect, loading screen and main menu. This also has code to initialize the LibraryManager, which now
	just takes a Q9InitialLibrary:ScriptableObject. The loading screen also has buttons to open the Discord, GitHub, and
	WordPress pages before continuing to the main menu proper.
	
+3 Rewrote ScaleSpaceObject to allow for placement in SS1 space, but scaling in SS0 space. Should make it easier to build systems.
+4 Wormhole effects for common, uncommon, rare, ultrarare, and legendary wormholes. Don't know how I'll use them.
+5 Writing methods for travel. Aligning needs some work. May need to separate it into separate Align and Approach methods.

 
##############################################################################################################

7.20.2018

+1 LibraryManager. This holds dictionaries for Q9Object lookups, will probably implement dedicated lookup functions later.
+2 SaveManager. WriteNewSave is being wirrten out. Output goes to /Profiles/_.xml

##############################################################################################################

7.17.2018

7.16.2018!1 "Known issue with an invalid operation, too tired to track it down."
	This was traced to ShipManager.UnlockTarget() whose removal of indices was being
	done unsafely.

+1 NPCs can spawn destruction-in-progress model that animates a ship being destroyed. This model
	cannot be targeted. This model will need to be responsible for spawning fully-destroyed models
	with loot.
+2 Explosion sounds. Lots of them.

Things can finally be shot at and killed.

##############################################################################################################

7.16.2018

+1 Moved different UI systems into separate canvases for batch optimizations.
+2 Targeting reticles. Contains timer for lock progress and spinner to indicate active target.
+3 Q9Ship._minCameraDistance to prevent clipping into the model on a per-ship basis.
+4 LockedTarget Buttons now display target health.
+5 Locking SFX, handled by a second audio source under the UISounds object.
+6 TestWeapon

!1 Known issue with an invalid operation, too tired to track it down.

##############################################################################################################

7.13.2018
Friday the 13th, please don't fuck my code over..

+1 Ship locking.
+2 EventManager. Finally.
+3 UISounds. Locking and Lock Complete sounds added, although the locking sound is not yet used. Subscribed to appropriate EventManager events.
+4 Notifications on center of the screen. Only have one for lock limits.
+5 ShipManager.LoadShip now updates a required Q9Entity. This will be used for the context menu, overview, and selected item panel.

>Q9Announcer now subscribes to EventManager events instead of taking messages directly.

##############################################################################################################

7.7.2018
+1 CommonData.TargetInfo
+2 ShipManager.TargetInfo[] _lockedTargets
+3 public ShipManager.LockTarget()
+4 Locked Targets Panel. These are always around, just hidden if the index in ShipManager._lockedTargets it is assigned to watch is invalid.
	The spinner on these elements are only shown if the active target is the same as the _lockedTargets index it is watching.

##############################################################################################################

7.6.2018
+1 CommonData.Bonuses
+2 Q9Module._passiveBonuses : CommonData.Bonuses
+3 ShipManager.CalculateModifiedAttributes being written
	Probably not going to be in a finished state for a long time.
	Functions pretty well, no obvious bugs
+4 More code for the functionality of ship weapons, etc. Q9Charges : Q9Object, Q9Weapon : Q9Module
+5 Cargo.Contains, Cargo.Remove, will write Cargo.Add tomorrow.
+6 Q9PassiveModule : Q9Module

TODO: Start writing targetting, review ShipManager for use in PlayerShip and NPC cases. Build primitive NPC for testing
Weapons. Finish writing and testing Q9Weapon. Write minor notification system for errors and warnings.

##############################################################################################################

7.4.2018
Happy July 4th, everyone. Not a lot going on, added classes that will be used by weapon modules.

+1 Several voice prompts for the announcer.
+2 CommonData.DamageTypes (Enum) contains four damage types.
+3 CommonData.Weapon (Struct) contains information common to weapons, uses .DamageTypes.
+4 CommonData.Offensive (Struct), contains bonus information for ship offensive stats, uses .Weapon.
+5 CommonData.Attributes now uses .Offensive.
+6 Testing blinking lights on station. Not a fan of these, animating large groups is fucking tedious.

>1 Changed the public method for queueing prompts, now takes an enum listing available prompts.

Notes:
Q9Module variants can easily use CD.Weapon. Calculating bonuses and overall damage should be easy.
Modules may need to be changed so they derive from Q9HighSlotModule : Q9Module so fitting can limit what goes in each slot type without needing to uses condition checks.

##############################################################################################################

7.3.2018
+1 Q9Module : Q9Object
+2 Q9Item : Q9Object
+3 Q9Ship : Q9Object
	Inventory will eventually be able to show and manipulate objects deriving from base Q9Object class.
	
+4 Status Ring, includes shield, integrity, and capacitor displays and percentages
+5 Hotbar Buttons, 3 rows of 4 buttons each, used for activating different modules on the player's ship.
	Takes either mouse clicks or button presses from F-Keys 1-12
+6 Q9Announcer, which takes simple commands and manages audio announcements with a queue system.
	Tries to not spam the same announcement multiple times. Checks to make sure last index in _queue
	is not the same clip as the one trying to be queued. Instructions on creating similar voices are at the
	end of this entry
	
+7 ShieldBooster : Q9Module 
+9 CommonData.Fitting
	Q9Module Arrays for High, Medium, Low, and Rig slots.
+10 CommonData.Cargo
	Q9Object array and overall capacity in cubic meters
	
+11 Q9Object.volume for describing the size of an object in cubic meters.
+12 Temporary command pod model, "Embryo"
+13 Resources/Ships, Items, Modules

*+6 Achieving the style of the AI voice:
	-Voice is generated by Amazon Polly. It uses the English-US language, and the Salli speaker.
	-Download the clip as .MP3 and import into Audacity
	-Reduce the Gain to -21.0 dB
	-Apply the effect "Delay" using the following parameters:
		Delay Type: regular
		Delay Level Per Echo: -6.00
		Delay Time: 0.009
		Pitch Change Effect: Pitch/Tempo
		Pitch Change Per Echo: 0.000
		Number of Echoes: 30
		Allow Duration to Change: Yes
	-Repeat the delay effect once
	-At this point, you should have a clip sounding like the AI voice.

Notes:
At this point, the system should be closed. The ShipManager should have public methods for manipulating shield, integrity, and capacitor. ShipManager.LoadShip() needs to be revamped, and the whole of ShipManager needs to be reviewed and checked for compatibility as both the player ship and NPC ships.

Easy goal would be setting up notifications with Q9GUIManager.
Operations Log: May contain entries about module activity, jump/warp drive usage, docking, etc.
Combat Log: May contain entries about damage dealt, damage taken, credit earnings, repairs, enemies killed, etc.

I've included a Photoshop _shield_style.asl in Assets/UI/Misc to easily import the style use on the Shield Booster icon.

##############################################################################################################

6.26.2018
-Majority of base code, everything except for what told the world how to behave.
-Ship.cs.

+ShipManager.cs.
+Q9Core.CommonData.
+Q9Object:ScriptableObject. This will be the root of all items, ships, modules, etc. that can be shown
	or manipulated in the inventory.
+Q9Ship Scriptable Objects. ShipManager uses one of these as the default ship and currently spawns it on Start().
	A public method is also available to respawn as a given Q9Ship at any time.
+Status ring with shield, integrity, capacitor, and speed meters. Currently non-functional.
+Hotbar buttons. Currently non-functional.

>Fixed blurry text in the overview.

TODO:
+Fitting attributes, interface, stations to limit where refitting can occur.
+Q9Modules
+Updated profile saving to include current ship and fitting

##############################################################################################################

5.30.2018
+1 Category icons for frigate, destroyer, cruiser, battleship, dreadnought, carrier, and supercarrier
+2 Libraries.cs on GO "Manager" for setting up icon, thumbnail, and alliance text libraries
+3 Tartarus and WIP thumbnail images
+4 Unfriendly overview objects flash red

~1 Moved OverviewObjectData, Location, and StarSystem to CommonData.cs, remains in namespace Q9Core

5.29.2018!1 Duplicate OverviewObjects fixed, positioning fixed

!1 SSLocation gameobjects do not scale their positions properly.


##############################################################################################################

5.29.2018
+1 PixelOperator font
+2 Overview and Selected Object panels
+3 /UI folder for all UI-related items
+4 Station view scene
+5 GUIManager Static Class for managing all UI-related functions

-1 SSLocationPreRuntime removed, functionality consolodated to SSLocation
	Object does not destroy on start, instead rescales itself to SS0

~1 OverviewObject renamed to OverviewObjectData
	All objects with source OverviewObjectData need to have OverviewObjectData.generateID() invoked to generate new Guid

>1 Create library of overview icons and thumbnails for lookup by overview panel and in-space icons

!1 RegisterOverviewObject creates duplicate OverviewObjects, not positioned correctly, but data is passed correctly

##############################################################################################################

5.28.2018
+1 Fixed buggy ScaleSpace.Warp from far distances, see ~1
+2 OverviewObject, RegisterOverviewObject, and OverviewGUI added.
+3 Planet 2 added

~1 Objects now move in ScaleSpace individually rather than moving with parent GO
~2 Changelog notation,
	+ : added
	- : removed
	~ : changed
	> : to do
	! : known issue

TODO:
>1 Add proper overview formatting using UGUI
>2 Add location features such as structures, AI, things to do
>3 Improve warp deceleration curve
>4 Station interior view

##############################################################################################################

5.27.2018
+Improved warp acceleration curve. Deceleration is still sudden.

!ScaleSpace.Warp is buggy at Point 3

##############################################################################################################

5.24.2018
+Ship now rotates to face destination
+Ships warps smoothly based on curves
+Ship moves within SS based on throttle
+AudioVolumeController adjusts volume of audio sources based on saved settings
+TestUI for testing alignment and warping
+SSLocation for easily adding locations to SS0 at start //Currently not working, does not add objects so SystemManager
+Several new skins for Tartarus Supercarrier
+Reset /Library as troubleshooting step
~LocationManager deprogrammed, going to reprogram

##############################################################################################################

5.23.2018

+CHANGELOG.txt
+ShipAttributes (ShipControl, ShipLocking, ShipOffense, ShipDefense, ShipCapacitor) to Q9Core
+ShipState to Q9Core
+Ship class. Does not directly respond to input, being built to be compatible with both player and AI ships.
+Translate(V3) and Translate(DV3) added to Q9Core.ScaleSpace
+Warp() added to Q9Core.ScaleSpace
~LocationState.idle => LocationState.inactive
~LocationState.running => LocationState.active


##############################################################################################################

5.22.2018

+Tartarus Model
+Textures for nearby planet
+Experimental Post Processing
+Location Trigger and Manager
+DoubleVector3 FromVector3 and ToVector3
methods

~Location Manager loads prefab for
area when player approaches
~Location Manager will reset location
if player has not returned within
five minutes